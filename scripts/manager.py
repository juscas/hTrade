
import requests
import json
import datetime

#scraped from ESPN points list for current season
playerIDs = [8480965,
8480955,
8480950,
8480948,
8480946,
8480945,
8480944,
8480943,
8480839,
8480830,
8480829,
8480806,
8480803,
8480801,
8480780,
8480771,
8480748,
8480382,
8480326,
8480172,
8480160,
8480147,
8480145,
8480144,
8480113,
8480078,
8480072,
8480039,
8480036,
8480035,
8480031,
8480029,
8480012,
8480009,
8480005,
8480002,
8479999,
8479994,
8479992,
8479977,
8479976,
8479974,
8479657,
8479496,
8479482,
8479465,
8479458,
8479442,
8479439,
8479420,
8479410,
8479407,
8479404,
8479400,
8479398,
8479395,
8479376,
8479370,
8479353,
8479351,
8479346,
8479345,
8479344,
8479343,
8479339,
8479337,
8479325,
8479320,
8479318,
8479316,
8479315,
8479314,
8479312,
8479293,
8479291,
8479290,
8479268,
8479193,
8479016,
8478906,
8478881,
8478874,
8478868,
8478866,
8478846,
8478844,
8478843,
8478585,
8478569,
8478561,
8478550,
8478542,
8478541,
8478519,
8478512,
8478500,
8478498,
8478493,
8478491,
8478483,
8478474,
8478469,
8478468,
8478466,
8478463,
8478460,
8478458,
8478455,
8478454,
8478445,
8478444,
8478443,
8478440,
8478439,
8478432,
8478427,
8478420,
8478417,
8478414,
8478413,
8478408,
8478407,
8478406,
8478403,
8478402,
8478401,
8478400,
8478398,
8478397,
8478396,
8478366,
8478131,
8478104,
8478099,
8478078,
8478075,
8478067,
8478055,
8478046,
8478042,
8478038,
8478027,
8478020,
8478010,
8477998,
8477996,
8477987,
8477986,
8477983,
8477973,
8477969,
8477964,
8477960,
8477959,
8477958,
8477957,
8477956,
8477955,
8477953,
8477952,
8477951,
8477950,
8477949,
8477948,
8477947,
8477946,
8477945,
8477944,
8477943,
8477942,
8477941,
8477940,
8477939,
8477937,
8477935,
8477934,
8477933,
8477932,
8477931,
8477930,
8477922,
8477919,
8477903,
8477901,
8477851,
8477850,
8477846,
8477845,
8477839,
8477831,
8477573,
8477529,
8477527,
8477520,
8477512,
8477511,
8477509,
8477507,
8477506,
8477505,
8477504,
8477503,
8477501,
8477500,
8477499,
8477498,
8477497,
8477496,
8477495,
8477494,
8477493,
8477492,
8477488,
8477482,
8477479,
8477478,
8477476,
8477474,
8477471,
8477465,
8477464,
8477463,
8477462,
8477461,
8477458,
8477456,
8477455,
8477454,
8477451,
8477450,
8477447,
8477444,
8477433,
8477429,
8477426,
8477425,
8477424,
8477416,
8477413,
8477407,
8477406,
8477404,
8477402,
8477401,
8477366,
8477361,
8477355,
8477353,
8477346,
8477341,
8477293,
8477290,
8477240,
8477237,
8477220,
8477215,
8477213,
8477180,
8477046,
8477043,
8477021,
8477018,
8477015,
8477009,
8476999,
8476994,
8476988,
8476983,
8476981,
8476979,
8476975,
8476967,
8476966,
8476960,
8476958,
8476948,
8476945,
8476941,
8476934,
8476932,
8476931,
8476925,
8476924,
8476923,
8476922,
8476921,
8476919,
8476918,
8476917,
8476915,
8476914,
8476913,
8476906,
8476905,
8476902,
8476899,
8476897,
8476894,
8476892,
8476891,
8476889,
8476887,
8476886,
8476885,
8476884,
8476883,
8476882,
8476881,
8476880,
8476879,
8476878,
8476877,
8476876,
8476875,
8476874,
8476873,
8476872,
8476871,
8476869,
8476867,
8476858,
8476857,
8476856,
8476854,
8476853,
8476851,
8476850,
8476826,
8476822,
8476806,
8476792,
8476779,
8476624,
8476617,
8476539,
8476525,
8476483,
8476480,
8476479,
8476476,
8476474,
8476473,
8476472,
8476470,
8476469,
8476468,
8476467,
8476466,
8476463,
8476462,
8476461,
8476460,
8476459,
8476458,
8476457,
8476456,
8476455,
8476454,
8476453,
8476449,
8476448,
8476447,
8476444,
8476443,
8476442,
8476441,
8476440,
8476439,
8476438,
8476437,
8476436,
8476434,
8476432,
8476429,
8476428,
8476427,
8476422,
8476419,
8476412,
8476410,
8476409,
8476407,
8476399,
8476393,
8476392,
8476389,
8476381,
8476374,
8476372,
8476368,
8476356,
8476346,
8476343,
8476331,
8476329,
8476326,
8476323,
8476316,
8476312,
8476310,
8476292,
8476288,
8476285,
8476234,
8476207,
8476191,
8476166,
8476043,
8475913,
8475907,
8475906,
8475883,
8475869,
8475868,
8475857,
8475855,
8475852,
8475848,
8475844,
8475841,
8475839,
8475834,
8475832,
8475831,
8475820,
8475810,
8475808,
8475807,
8475799,
8475798,
8475796,
8475794,
8475793,
8475792,
8475791,
8475790,
8475789,
8475786,
8475784,
8475780,
8475772,
8475768,
8475766,
8475765,
8475764,
8475763,
8475762,
8475760,
8475758,
8475755,
8475754,
8475753,
8475752,
8475750,
8475747,
8475745,
8475744,
8475738,
8475735,
8475728,
8475727,
8475726,
8475722,
8475717,
8475716,
8475715,
8475714,
8475692,
8475690,
8475683,
8475660,
8475625,
8475622,
8475462,
8475455,
8475430,
8475423,
8475413,
8475343,
8475325,
8475324,
8475323,
8475321,
8475314,
8475311,
8475287,
8475279,
8475277,
8475268,
8475263,
8475253,
8475246,
8475236,
8475235,
8475233,
8475231,
8475227,
8475225,
8475222,
8475220,
8475218,
8475215,
8475209,
8475208,
8475206,
8475204,
8475200,
8475197,
8475195,
8475193,
8475191,
8475188,
8475186,
8475184,
8475181,
8475179,
8475178,
8475177,
8475176,
8475175,
8475172,
8475171,
8475170,
8475169,
8475168,
8475167,
8475166,
8475164,
8475163,
8475160,
8475158,
8475156,
8475151,
8475149,
8475098,
8474889,
8474884,
8474870,
8474849,
8474818,
8474749,
8474736,
8474722,
8474717,
8474716,
8474715,
8474709,
8474697,
8474688,
8474685,
8474683,
8474679,
8474673,
8474668,
8474651,
8474641,
8474636,
8474628,
8474627,
8474618,
8474613,
8474612,
8474610,
8474602,
8474600,
8474596,
8474593,
8474590,
8474589,
8474586,
8474584,
8474581,
8474579,
8474578,
8474574,
8474573,
8474571,
8474569,
8474567,
8474565,
8474564,
8474563,
8474550,
8474520,
8474291,
8474250,
8474230,
8474218,
8474207,
8474190,
8474189,
8474176,
8474166,
8474162,
8474161,
8474157,
8474152,
8474151,
8474150,
8474149,
8474145,
8474141,
8474134,
8474131,
8474125,
8474102,
8474098,
8474091,
8474090,
8474068,
8474066,
8474062,
8474056,
8474053,
8474040,
8474038,
8474037,
8474034,
8474031,
8474027,
8474013,
8474009,
8474000,
8473994,
8473991,
8473986,
8473933,
8473673,
8473618,
8473614,
8473607,
8473604,
8473588,
8473584,
8473575,
8473573,
8473564,
8473563,
8473548,
8473546,
8473544,
8473541,
8473534,
8473533,
8473512,
8473507,
8473504,
8473503,
8473492,
8473473,
8473463,
8473453,
8473449,
8473446,
8473434,
8473422,
8473419,
8473415,
8473412,
8472382,
8471958,
8471887,
8471873,
8471817,
8471794,
8471774,
8471769,
8471768,
8471761,
8471750,
8471743,
8471735,
8471734,
8471729,
8471724,
8471717,
8471716,
8471709,
8471707,
8471702,
8471699,
8471698,
8471695,
8471691,
8471686,
8471685,
8471679,
8471677,
8471676,
8471675,
8471669,
8471657,
8471469,
8471426,
8471418,
8471392,
8471339,
8471306,
8471303,
8471276,
8471274,
8471273,
8471262,
8471260,
8471242,
8471239,
8471233,
8471228,
8471227,
8471226,
8471218,
8471217,
8471215,
8471214,
8470966,
8470880,
8470860,
8470834,
8470803,
8470794,
8470775,
8470755,
8470657,
8470655,
8470645,
8470642,
8470638,
8470626,
8470619,
8470616,
8470613,
8470612,
8470611,
8470610,
8470607,
8470606,
8470604,
8470602,
8470601,
8470600,
8470598,
8470595,
8470594,
8470543,
8470320,
8470318,
8470281,
8470257,
8470187,
8470151,
8470147,
8470144,
8470110,
8470093,
8470047,
8469608,
8469521,
8469514,
8469506,
8469465,
8469459,
8469455,
8469454,
8468685,
8468674,
8468611,
8468509,
8468508,
8468498,
8468493,
8468011,
8467950,
8466141,
8466139,
8466138,
8465009,
8464989]

def getCurrentTeamIDs():

	response = requests.get("https://statsapi.web.nhl.com/api/v1/teams/")
	data = response.json()

	if (response.status_code != 404):
		print("GET Request successful (%s)" % response.status_code)
	else:
		print("GET Request ERROR (%s)" % response.status_code)
		return

	idList = []

	for team in data['teams']:
		idList.append(team["id"])

	return idList

def activeRosterPlayerIDstoJSON(idList, file):

	f = open(file, 'w')

	f.write("{\n\t\"Updated\": {\n\"date\": \"%s\"\n },\n\n    \"Players\": [ \n" % datetime.datetime.now())

	counter = 0

	for id in idList:

		response = requests.get("https://statsapi.web.nhl.com/api/v1/teams/%s/?expand=team.roster" % id)
		data = json.loads(response.text)

		for player in data['teams'][0]["roster"]["roster"]:
			if counter!=0:
				f.write(",\n")
			else:
				counter +=1
			json.dump(player["person"], f, indent=4)

	f.write("\n]\n}")
	f.close()

def activePlayerIDsToJSON(idList, file):

	f = open(file, 'w')

	f.write("{\n\t\"Updated\": {\n\"date\": \"%s\"\n },\n\n    \"Players\": [ \n" % datetime.datetime.now())

	counter = 0

	for id in idList:

		response = requests.get("https://statsapi.web.nhl.com/api/v1/people/%s" % id)
		data = json.loads(response.text)

		playerInfo = data['people'][0]

		if counter!=0:
			f.write(",\n")
		else:
			counter +=1

		json.dump(playerInfo, f, indent=4)

	f.write("\n]\n}")
	f.close()

	return f

ids = getCurrentTeamIDs()

file = activePlayerIDsToJSON(playerIDs, "playerlist1.json")